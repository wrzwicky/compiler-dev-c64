

The structure of the program:
    0-1000  declaration and explanation of the variables used.
 1000-2000  initalization tasks
 2000-50000 the program for syntactic analysis
50000-end   the program for the lexical analysis

-----
BASIC Symbols

Value Character Value Character
32 space      33 !
34 "          35 #
36 $          37 %
38 &          39 '
40 (          41 )
42 *          43 +
44 ,          45 -
46 .          47 /
48 0          49 1
50 2          51 3
52 4          53 5
54 6          55 7
56 8          57 9
58 0          59 ;
60 <          61 =
62 >          63 ?
64 @          65 a
66 b          67 c
68 d          69 e
70 f          71 g
72 h          73 i
74 j          75 k
76 1          77 m
78 n          79 0
80 p          81 q
82 r          83 s
84 t          85 u
86 v          87 w
88 X          89 y
90 z          91 [
92 English pound  93 ]
94 ^              95 <- left arrow
96 shifted space

(graphics symbols through 127)

128 end      129 for
130 next     131 data
132 input#   133 input
134 dim      135 read
136 let      137 go to
138 run      139 if
140 restore  141 go sub
142 return   143 rem
144 stop     145 on
146 wait     147 load
148 save     149 verify
150 def      151 poke
152 print#   153 print
154 cont     155 list
156 clr      157 cmd
158 sys      159 open
160 close    161 get
162 new      163 tab(
164 to       165 fn
166 spc(     167 then
168 not      169 step
170 +        171 -
172 *        173 /
174 ^        175 and
176 or       177 <
178 =        179 >
180 sgn      181 int
182 abs      183 usr
184 fre      185 pos
186 sqr      187 rnd
188 log      189 exp
190 cos      191 sin
192 tan      193 atn
194 peek     195 len
196 str$     197 val
198 asc      199 chr$
200 left$    201 right$
202 mid$     203 go

extra tokens generated by CBM prg Studio:
210 color
213 char

-----
MINI Symbols

Value   Keyword
128     add
129     outputdevice
130     exit
131     begin
132     generate
133     curscol
134     curslin
135     then
136     by
137     divide
138     float
139     background
140     get
141     is
142     empty
143     with
144     multiply
145     tovar
146     pend
147     power
148     program
149     border
150     call
151     type
152     clearscreen
153     loop
154     lend
155     else
156     jump
157     jumplabel
158     subtract
159     over
160     assign
161     srend
162     subroutine
163     from
164     linefeed
165     endif
166     if
167     write
168     writeln
169     writeas
170     and





-----
Terminal Symbols

Alternative     Terminal symbol
1       program
2       subroutine
3       EOF
4       letter
04a     letter
5       is, '.', ’,’, and, tovar, from, with, by,
        over, if, to, repeat, '=', ' / =', ' <', '<=',
        ' >' , ' >=' , then
6       letter
7       float
8       begin
9       float
10      ',’
11      '.’
12      empty, write, writeln, linefeed, clearscreen,
        curscol, curslin, writeas, outputdevice,
        border, background, type, get, assign, add,
        subtract, multiply, divide, power, generate,
        if, loop, exit, for, jumplabel, jump, call
13      see 12
14      pend, srend, else, endif, '.', lend
15      empty
16      write
17      writeln
18      linefeed
19      clearscreen
20      curscol
21      curslin
22      writeas
23      outputdevice
24      border
25      background
26      type
27      get
28      assign
29      add
30      subtract
31      multiply
32      divide
33      power
34      generate
35      if
36      loop
37      exit
38      for
39      jumplabel
40      jump
41      call
42      digit
43      letter
44      tovar
45      '.’
46      letter
47      '=’
48      '/=’
49      '<’
53      character except for ' " '
54      ' “ ‘
55      digit
55      digit
56      '.', 'e', tovar
57      digit
58      digit
59      '.'
60      'e'
61      tovar
62      'e'
63      tovar
64      'e'
65      '+'
66      '-'
67      digit
68      ' " '
69      letter


-----
Non-Terminal Symbols

Number Symbol
1 program identifier definition
2 definition section start
3 definition section end
4 program identifier check
5 program end
6 subroutine identifier definition
7 subroutine identifier check
8 output
9 output with line feed
10 line feed
11 clear screen
12 cursor column
13 cursor line
14 output ASCII
15 device
16 border
17 background
18 type
19 input
20 assign
21 add
22 subtract
23 multiply
24 divide
25 power
26 generate
27 period
28 conditional
29 else
30 conditional end
31 infinite loop
32 infinite loop end
33 exit
34 index loop
35 loop start
36 index loop end
37 jump label
38 jump
39 call
40 floating point number
41 variable
42 generate_l
43 operator=
44 operator/=
45 operat or<
46 operator<=
47 operator>
48 operator>=
49 decimal places
50 no exponent
51 exponent
52 plus
53 minus
54 save letter
55 output identifier
56 save character
57 output string
58 save digit
59 output digit
